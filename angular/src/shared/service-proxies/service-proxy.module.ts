import { AbpHttpInterceptor } from '@abp/abpHttpInterceptor';
import { HTTP_INTERCEPTORS } from '@angular/common/http';
import { NgModule } from '@angular/core';
import * as ApiServiceProxies from './service-proxies';

@NgModule({
    providers: [
        ApiServiceProxies.CityServiceProxy,
        ApiServiceProxies.GLLocationsServiceProxy,
        ApiServiceProxies.ChartOfACListingReportServiceProxy,
        ApiServiceProxies.CashBookReportServiceProxy,
        ApiServiceProxies.GLOptionsServiceProxy,
        ApiServiceProxies.VendorActivityServiceProxy,
        ApiServiceProxies.AROptionsServiceProxy,
        ApiServiceProxies.APOptionsServiceProxy,
        ApiServiceProxies.GLTRHeadersServiceProxy,
        ApiServiceProxies.GLTRDetailsServiceProxy,
        ApiServiceProxies.VoucherEntryServiceProxy,
        ApiServiceProxies.TaxClassesServiceProxy,
        ApiServiceProxies.APTransactionListServiceProxy,
        ApiServiceProxies.APTransactionListingReportsServiceProxy,
        ApiServiceProxies.FiscalCalendersServiceProxy,
        ApiServiceProxies.AccountsPostingsServiceProxy,
        ApiServiceProxies.BatchListPreviewsServiceProxy,
        ApiServiceProxies.BkTransfersServiceProxy,
        ApiServiceProxies.GLBOOKSServiceProxy,
        ApiServiceProxies.GLCONFIGServiceProxy,
        ApiServiceProxies.GLBOOKSServiceProxy,
        ApiServiceProxies.TaxAuthoritiesServiceProxy,
        ApiServiceProxies.BanksServiceProxy,
        ApiServiceProxies.APTermsServiceProxy,
        ApiServiceProxies.AccountSubLedgersServiceProxy,
        ApiServiceProxies.CurrencyRatesServiceProxy,
        ApiServiceProxies.ChartofControlsServiceProxy,
        ApiServiceProxies.Segmentlevel3sServiceProxy,
        ApiServiceProxies.SubControlDetailsServiceProxy,
        ApiServiceProxies.ControlDetailsServiceProxy,
        ApiServiceProxies.GroupCodesServiceProxy,
        ApiServiceProxies.GroupCategoriesServiceProxy,
        ApiServiceProxies.FiscalCalendarsServiceProxy,
        ApiServiceProxies.CompanyProfilesServiceProxy,
        ApiServiceProxies.AuditLogServiceProxy,
        ApiServiceProxies.CachingServiceProxy,
        ApiServiceProxies.ChatServiceProxy,
        ApiServiceProxies.CommonLookupServiceProxy,
        ApiServiceProxies.EditionServiceProxy,
        ApiServiceProxies.FriendshipServiceProxy,
        ApiServiceProxies.HostSettingsServiceProxy,
        ApiServiceProxies.InstallServiceProxy,
        ApiServiceProxies.LanguageServiceProxy,
        ApiServiceProxies.NotificationServiceProxy,
        ApiServiceProxies.OrganizationUnitServiceProxy,
        ApiServiceProxies.PermissionServiceProxy,
        ApiServiceProxies.ProfileServiceProxy,
        ApiServiceProxies.RoleServiceProxy,
        ApiServiceProxies.SessionServiceProxy,
        ApiServiceProxies.TenantServiceProxy,
        ApiServiceProxies.TenantDashboardServiceProxy,
        ApiServiceProxies.TenantSettingsServiceProxy,
        ApiServiceProxies.TimingServiceProxy,
        ApiServiceProxies.UserServiceProxy,
        ApiServiceProxies.UserLinkServiceProxy,
        ApiServiceProxies.UserLoginServiceProxy,
        ApiServiceProxies.WebLogServiceProxy,
        ApiServiceProxies.AccountServiceProxy,
        ApiServiceProxies.TokenAuthServiceProxy,
        ApiServiceProxies.TenantRegistrationServiceProxy,
        ApiServiceProxies.HostDashboardServiceProxy,
        ApiServiceProxies.PaymentServiceProxy,
        ApiServiceProxies.DemoUiComponentsServiceProxy,
        ApiServiceProxies.InvoiceServiceProxy,
        ApiServiceProxies.SubscriptionServiceProxy,
        ApiServiceProxies.InstallServiceProxy,
        ApiServiceProxies.UiCustomizationSettingsServiceProxy,
        ApiServiceProxies.PayPalPaymentServiceProxy,
        ApiServiceProxies.StripePaymentServiceProxy,
        ApiServiceProxies.ReportFilterServiceProxy,
        { provide: HTTP_INTERCEPTORS, useClass: AbpHttpInterceptor, multi: true }
    ]
})
export class ServiceProxyModule { }
